//SPX-License-Identifier: UNLICENSED


/*
*@Author Jordan Powell
* Using NFTs to model after real estate transactions
* With unit testing, libraries, modifiers, interfaces, payable functions
* 
* ERC721 and Openzeppelin
*/

pragma solidity ^0.8.0;

interface IERC721 {
    function transferFrom(address _from, address _to, uint256 _id) external;
}

contract Escrow{

    address public nftAddress;
    uint256 public nftID;
    uint256 public price;
    uint256 public escrowAmount;

    address payable public seller;
    address payable public buyer;

    address public inspector;
    address public lender;

    modifier onlyBuyer(){
        require(msg.sender == buyer, "Only buyer can call this function");
        _;
    }

    modifier onlyInspector(){
        require(msg.sender == inspector, "Only inspector can call this function");
        _;
    }

    bool public inspectionPassed = false;

    mapping(address => bool) public approval;

    // Empty recieve function allows funds to be recieved
    // recieve() external payable {};

    constructor(

    address _nftAddress,
    uint256 _nftID,

    uint256 _price,
    uint256 _escrowAmount,

    address payable _buyer,
    address payable _seller,

    address _inspector,
    address _lender
    ){
        nftAddress = _nftAddress;
        nftID = _nftID;

        price = _price;
        escrowAmount = _escrowAmount;

        seller = _seller;
        buyer = _buyer;

        inspector = _inspector;
        lender = _lender;
    }

    function depositEarnest() public payable onlyBuyer {
        require(msg.value >= escrowAmount);
    }

    function updateInspectionStatus(bool _passed) public onlyInspector{
        inspectionPassed = _passed;
    }

    function approveSale() public {
        approval[msg.sender] = true;
    }

    function getBalance() public view returns(uint){
        return address(this).balance;
    }

    // Transfer ownership of property
    function finalizeSale() public{

        require(inspectionPassed, "Must pass inspection");
        require(approval[buyer], "Must be approved by buyer");
        require(approval[seller], "Must be approved by seller");
        require(approval[lender], "Must be approved by lender");
        require(address(this).balance >= price, "Must have enough ether for sale");

        // Require successful transfer
        (bool success, ) = payable(seller).call{value: address(this).balance}("");
        require(success);

        IERC721(nftAddress).transferFrom(seller, buyer, nftID);
    }
}
